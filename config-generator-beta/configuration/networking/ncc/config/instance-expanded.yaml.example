hubs:
  - name: <hub_name>
    project_id: <hub_project_id>
    description: "Example NCC Hub"
    labels:
      env: prod
    export_psc: true
    policy_mode: PRESET
    preset_topology: MESH
    auto_accept_projects:
      - <hub_project_id>
    create_new_hub: false
    existing_hub_uri: "projects/<hub_project_id>/locations/global/hubs/<hub_name>"
    group_name: default

spokes:
  - type: linked_vpc_network
    name: spoke1
    project_id: <spoke1_project_id>
    uri: projects/<spoke1_project_id>/global/networks/<vpc1_name>

  - type: linked_producer_vpc_network
    name: prodspoke1
    project_id: <prodspoke1_project_id>
    location: global
    uri: projects/<prodspoke1_project_id>/global/networks/<vpc1_name>
    peering: servicenetworking-googleapis-com
    exclude_export_ranges: []

  - type:  linked_vpn_tunnels
    name: <vpn-spoke-name>
    project_id: <vpn-spoke-project-id>
    location: <region>
    uris:
    - projects/<vpn-spoke-project-id>/regions/<region>/vpnTunnels/<tunnel-name-1>
    - projects/<vpn-spoke-project-id>/regions/<region>/vpnTunnels/<tunnel-name-2>

  - type: linked_interconnect_attachments
    name: <linked_interconnect_attachments_name>
    project_id: <spoke_project_id>
    location: <region>
    uris:
    - projects/<spoke_project_id>/regions/<region>/interconnectAttachments/<linked_interconnect_attachments_name>
    - projects/<spoke_project_id>/regions/<region>/interconnectAttachments/<linked_interconnect_attachments_name>

  - type: "router_spoke"
    name: "<routerspoke1_name>"
    project_id: "<router_project_id>"
    location: "<region>"
    router: "projects/<router_project_id>/regions/<region>/routers/<router_name>"

