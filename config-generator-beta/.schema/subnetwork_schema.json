{
  "id": "Subnetwork",
  "description": "Represents a Subnetwork resource. A subnetwork (also known as a subnet) is a logical partition of a Virtual Private Cloud network with one primary IP range and zero or more secondary IP ranges. For more information, read Virtual Private Cloud (VPC) Network.",
  "type": "object",
  "properties": {
    "kind": {
      "description": "[Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.",
      "default": "compute#subnetwork",
      "type": "string"
    },
    "id": {
      "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
      "type": "string",
      "format": "uint64"
    },
    "creationTimestamp": {
      "description": "[Output Only] Creation timestamp in RFC3339 text format.",
      "type": "string"
    },
    "name": {
      "description": "The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
      "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
      "type": "string"
    },
    "description": {
      "description": "An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.",
      "type": "string"
    },
    "network": {
      "description": "The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. This field can be set only at resource creation time.",
      "type": "string"
    },
    "ipCidrRange": {
      "description": "The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 100.64.0.0/10. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field is set at resource creation time. The range can be any range listed in the Valid ranges list. The range can be expanded after creation using expandIpCidrRange.",
      "type": "string"
    },
    "reservedInternalRange": {
      "description": "The URL of the reserved internal range.",
      "type": "string"
    },
    "gatewayAddress": {
      "description": "[Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork.",
      "type": "string"
    },
    "region": {
      "description": "URL of the region where the Subnetwork resides. This field can be set only at resource creation time.",
      "type": "string"
    },
    "selfLink": {
      "description": "[Output Only] Server-defined URL for the resource.",
      "type": "string"
    },
    "privateIpGoogleAccess": {
      "description": "Whether the VMs in this subnet can access Google services without assigned external IP addresses. This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess.",
      "type": "boolean"
    },
    "secondaryIpRanges": {
      "description": "An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges. This field can be updated with a patch request.",
      "type": "array",
      "items": {
        "$ref": "SubnetworkSecondaryRange"
      }
    },
    "fingerprint": {
      "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a Subnetwork. An up-to-date fingerprint must be provided in order to update the Subnetwork, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a Subnetwork.",
      "type": "string",
      "format": "byte"
    },
    "enableFlowLogs": {
      "description": "Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. This field isn't supported if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.",
      "type": "boolean"
    },
    "privateIpv6GoogleAccess": {
      "description": "This field is for internal use. This field can be both set at resource creation time and updated using patch.",
      "type": "string",
      "enumDescriptions": [
        "Disable private IPv6 access to/from Google services.",
        "Bidirectional private IPv6 access to/from Google services.",
        "Outbound private IPv6 access from VMs in this subnet to Google services."
      ],
      "enum": [
        "DISABLE_GOOGLE_ACCESS",
        "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE",
        "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE"
      ]
    },
    "ipv6CidrRange": {
      "description": "[Output Only] This field is for internal use.",
      "type": "string"
    },
    "externalIpv6Prefix": {
      "description": "The external IPv6 address range that is owned by this subnetwork.",
      "type": "string"
    },
    "internalIpv6Prefix": {
      "description": "The internal IPv6 address range that is owned by this subnetwork.",
      "type": "string"
    },
    "purpose": {
      "type": "string",
      "enumDescriptions": [
        "Subnet reserved for Global Envoy-based Load Balancing.",
        "Subnet reserved for Internal HTTP(S) Load Balancing. This is a legacy purpose, please use REGIONAL_MANAGED_PROXY instead.",
        "Subnetwork will be used for Migration from one peered VPC to another. (a transient state of subnetwork while migrating resources from one project to another).",
        "Regular user created or automatically created subnet.",
        "Subnetwork used as source range for Private NAT Gateways.",
        "Regular user created or automatically created subnet.",
        "Subnetworks created for Private Service Connect in the producer network.",
        "Subnetwork used for Regional Envoy-based Load Balancing."
      ],
      "enum": [
        "GLOBAL_MANAGED_PROXY",
        "INTERNAL_HTTPS_LOAD_BALANCER",
        "PEER_MIGRATION",
        "PRIVATE",
        "PRIVATE_NAT",
        "PRIVATE_RFC_1918",
        "PRIVATE_SERVICE_CONNECT",
        "REGIONAL_MANAGED_PROXY"
      ]
    },
    "role": {
      "description": "The role of subnetwork. Currently, this field is only used when purpose is set to GLOBAL_MANAGED_PROXY or REGIONAL_MANAGED_PROXY. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Envoy-based load balancers in a region. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request.",
      "type": "string",
      "enumDescriptions": [
        "The ACTIVE subnet that is currently used.",
        "The BACKUP subnet that could be promoted to ACTIVE."
      ],
      "enum": [
        "ACTIVE",
        "BACKUP"
      ]
    },
    "state": {
      "description": "[Output Only] The state of the subnetwork, which can be one of the following values: READY: Subnetwork is created and ready to use DRAINING: only applicable to subnetworks that have the purpose set to INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load balancer are being drained. A subnetwork that is draining cannot be used or modified until it reaches a status of READY",
      "type": "string",
      "enumDescriptions": [
        "Subnetwork is being drained.",
        "Subnetwork is ready for use."
      ],
      "enum": [
        "DRAINING",
        "READY"
      ]
    },
    "logConfig": {
      "description": "This field denotes the VPC flow logging options for this subnetwork. If logging is enabled, logs are exported to Cloud Logging.",
      "$ref": "SubnetworkLogConfig"
    },
    "stackType": {
      "description": "The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is used. This field can be both set at resource creation time and updated using patch.",
      "type": "string",
      "enumDescriptions": [
        "New VMs in this subnet can have both IPv4 and IPv6 addresses.",
        "New VMs in this subnet will only be assigned IPv4 addresses.",
        "New VMs in this subnet will only be assigned IPv6 addresses."
      ],
      "enum": [
        "IPV4_IPV6",
        "IPV4_ONLY",
        "IPV6_ONLY"
      ]
    },
    "ipv6AccessType": {
      "description": "The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack.",
      "type": "string",
      "enumDescriptions": [
        "VMs on this subnet will be assigned IPv6 addresses that are accessible via the Internet, as well as the VPC network.",
        "VMs on this subnet will be assigned IPv6 addresses that are only accessible over the VPC network."
      ],
      "enum": [
        "EXTERNAL",
        "INTERNAL"
      ]
    },
    "ipCollection": {
      "description": "Reference to the source of IP, like a PublicDelegatedPrefix (PDP) for BYOIP. The PDP must be a sub-PDP in EXTERNAL_IPV6_SUBNETWORK_CREATION mode. Use one of the following formats to specify a sub-PDP when creating a dual stack subnetwork with external access using BYOIP: - Full resource URL, as in https://www.googleapis.com/compute/v1/projects/projectId/regions/region /publicDelegatedPrefixes/sub-pdp-name - Partial URL, as in - projects/projectId/regions/region/publicDelegatedPrefixes/ sub-pdp-name - regions/region/publicDelegatedPrefixes/sub-pdp-name ",
      "type": "string"
    },
    "ipv6GceEndpoint": {
      "description": "[Output Only] Possible endpoints of this subnetwork. It can be one of the following: - VM_ONLY: The subnetwork can be used for creating instances and IPv6 addresses with VM endpoint type. Such a subnetwork gets external IPv6 ranges from a public delegated prefix and cannot be used to create NetLb. - VM_AND_FR: The subnetwork can be used for creating both VM instances and Forwarding Rules. It can also be used to reserve IPv6 addresses with both VM and FR endpoint types. Such a subnetwork gets its IPv6 range from Google IP Pool directly. ",
      "type": "string",
      "enumDescriptions": [
        "",
        ""
      ],
      "enum": [
        "VM_AND_FR",
        "VM_ONLY"
      ]
    },
    "params": {
      "description": "Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.",
      "$ref": "SubnetworkParams"
    },
    "systemReservedInternalIpv6Ranges": {
      "description": "Output only. [Output Only] The array of internal IPv6 network ranges reserved from the subnetwork's internal IPv6 range for system use.",
      "readOnly": true,
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "systemReservedExternalIpv6Ranges": {
      "description": "Output only. [Output Only] The array of external IPv6 network ranges reserved from the subnetwork's external IPv6 range for system use.",
      "readOnly": true,
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  }
}